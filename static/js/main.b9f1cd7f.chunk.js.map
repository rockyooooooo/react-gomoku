{"version":3,"sources":["components/ActiveChess.js","components/Square.js","components/BoardRow.js","components/Board.js","components/Gomoku.js","index.js"],"names":["StyledActiveChess","styled","div","props","square","ActiveChess","boardRowIndex","squareIndex","handleClick","onClick","StyledSquare","Square","BOARD_WIDTH","BOARD_HEIGHT","StyledBoardRow","BoardRow","row","map","index","Board","squares","StyledGomoku","Main","Header","Title","h1","Subtitle","h2","Info","Status","initSquares","i","j","push","Gomoku","useState","history","setHistory","isBlackNext","setIsBlackNext","status","setStatus","round","setRound","current","useEffect","winner","calculateWinner","newHistory","slice","concat","length","searchRow","searchColumn","searchSlash","searchBackslash","count","k","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9f1cd7f.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst StyledActiveChess = styled.div`\r\n  position: absolute;\r\n  z-index: 1;\r\n  padding: 1rem;\r\n  border-radius: 50%;\r\n\r\n  background: ${(props) => {\r\n    return props.square === 'black' ?\r\n    '#000' :\r\n    props.square === 'white' ?\r\n    '#fff' :\r\n    'transparent'\r\n  }}\r\n`\r\n\r\nexport default function ActiveChess({ square, boardRowIndex, squareIndex, handleClick }) {\r\n  return (\r\n    <StyledActiveChess\r\n      square={square}\r\n      onClick={handleClick(boardRowIndex, squareIndex)}\r\n    />\r\n  )\r\n}\r\n\r\nActiveChess.propTypes = {\r\n  square: PropTypes.oneOf([\r\n    null,\r\n    'black',\r\n    'white'\r\n  ]),\r\n  boardRowIndex: PropTypes.number,\r\n  squareIndex: PropTypes.number,\r\n  handleClick: PropTypes.func\r\n}","import styled from 'styled-components'\r\nimport ActiveChess from './ActiveChess'\r\nimport { BOARD_WIDTH, BOARD_HEIGHT } from './Gomoku'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst StyledSquare = styled.div`\r\n  background: #d5b092; \r\n  position: relative;\r\n  display: inline-block;\r\n  border: 1px solid black;\r\n  padding: 1rem;\r\n`\r\n\r\nexport default function Square({ square, boardRowIndex, squareIndex, handleClick }) {\r\n  return (\r\n    <StyledSquare>\r\n      {\r\n        squareIndex >= BOARD_WIDTH - 1 ||\r\n        boardRowIndex >= BOARD_HEIGHT - 1 ?\r\n        '' :\r\n        <ActiveChess\r\n          square={square}\r\n          boardRowIndex={boardRowIndex}\r\n          squareIndex={squareIndex}\r\n          handleClick={handleClick}\r\n        />\r\n      }\r\n    </StyledSquare>\r\n  )\r\n}\r\n\r\nSquare.propTypes = {\r\n  square: PropTypes.oneOf([\r\n    null,\r\n    'black',\r\n    'white'\r\n  ]),\r\n  boardRowIndex: PropTypes.number,\r\n  squareIndex: PropTypes.number,\r\n  handleClick: PropTypes.func\r\n}","import styled from 'styled-components'\r\nimport Square from './Square'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst StyledBoardRow = styled.div`\r\n  margin-bottom: -4px;  // 抵銷奇怪的 margin\r\n`\r\n\r\nexport default function BoardRow({ row, boardRowIndex, handleClick }) {\r\n  return (\r\n      <StyledBoardRow>\r\n        {row.map((square, index) => {\r\n          return (\r\n            <Square\r\n              key={`squareKey${index}`}\r\n              square={square}\r\n              squareIndex={index}\r\n              boardRowIndex={boardRowIndex}\r\n              handleClick={handleClick}\r\n            />\r\n          )\r\n        })}\r\n      </StyledBoardRow>\r\n  )\r\n}\r\n\r\nBoardRow.propTypes = {\r\n  row: PropTypes.arrayOf(\r\n    PropTypes.oneOf([\r\n      null,\r\n      'black',\r\n      'white'\r\n    ])\r\n  ),\r\n  boardRowIndex: PropTypes.number,\r\n  handleClick: PropTypes.func\r\n}","import BoardRow from './BoardRow'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Board({ squares, handleClick }) {\r\n  return (\r\n    <div>\r\n      {squares.map((row, index) => {\r\n        return (\r\n          <BoardRow\r\n            key={`rowKey${index}`}\r\n            row={row}\r\n            boardRowIndex={index}\r\n            handleClick={handleClick} \r\n          />\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nBoard.propTypes = {\r\n  squares: PropTypes.arrayOf(\r\n    PropTypes.arrayOf(\r\n      PropTypes.oneOf([\r\n        null,\r\n        'black',\r\n        'white'\r\n      ])\r\n    )\r\n  ),\r\n  handleClick: PropTypes.func\r\n}","import { useEffect, useState } from 'react'\r\nimport Board from './Board'\r\nimport styled from 'styled-components'\r\n\r\nexport const BOARD_WIDTH = 19\r\nexport const BOARD_HEIGHT = 19\r\n\r\nconst StyledGomoku = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  gap: 2rem;\r\n`\r\n\r\nconst Main = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 2rem;\r\n`\r\n\r\nconst Header = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nconst Title = styled.h1`\r\n  font-size: 3rem\r\n`\r\n\r\nconst Subtitle = styled.h2`\r\n  font-size: 2rem;\r\n`\r\n\r\nconst Info = styled.div`\r\n  width: 15rem;\r\n`\r\n\r\nconst Status = styled.div`\r\n  font-size: 1.5rem;\r\n  text-transform: capitalize;\r\n`\r\n\r\nconst initSquares = []\r\nfor(let i = 0; i < BOARD_HEIGHT; i++) {\r\n  const row = []\r\n  for(let j = 0; j < BOARD_WIDTH; j++) {\r\n    row.push(null)\r\n  }\r\n  initSquares.push(row)\r\n}\r\n\r\nexport default function Gomoku() {\r\n  const [history, setHistory] = useState([{\r\n    squares: initSquares\r\n  }])\r\n  const [isBlackNext, setIsBlackNext] = useState(true)\r\n  const [status, setStatus] = useState('')\r\n  const [round, setRound] = useState(0)\r\n  const current = history[round].squares\r\n\r\n  useEffect(() => {\r\n    const winner = calculateWinner(current)\r\n    setStatus(winner ?\r\n      `Winner is: 🎉${winner}🎉` :\r\n      `嗯～下面一位：${isBlackNext ? 'Black' : 'White'}`\r\n    )\r\n  }, [current, isBlackNext])\r\n\r\n  const handleClick = (boardRowIndex, squareIndex) => {\r\n    return () => {\r\n      if (calculateWinner(current)) return\r\n\r\n      if (current[boardRowIndex][squareIndex]) return\r\n      const newHistory = history.slice()\r\n      const squares = current.slice()\r\n      squares[boardRowIndex][squareIndex] = isBlackNext ? 'black' : 'white'\r\n      setHistory(newHistory.concat([{\r\n        squares\r\n      }]))\r\n      setIsBlackNext(!isBlackNext)\r\n      setRound(newHistory.length)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyledGomoku>\r\n      <Main>\r\n        <Header>\r\n          <Title>五子棋</Title>\r\n          <Subtitle>Gomoku</Subtitle>\r\n        </Header>\r\n        <Board squares={current} handleClick={handleClick} />\r\n      </Main>\r\n      <Info>\r\n        <Status>\r\n          {status}\r\n        </Status>\r\n      </Info>\r\n    </StyledGomoku>\r\n  )\r\n}\r\n\r\nconst calculateWinner = (squares) => {\r\n  const winner = searchRow(squares) || searchColumn(squares) || searchSlash(squares) || searchBackslash(squares)\r\n  return winner\r\n}\r\n\r\nconst searchRow = (squares) => {\r\n  let current = null\r\n  let count = 1\r\n  for(let i = 0; i < squares.length; i++) {\r\n    for(let j = 0; j < squares[i].length; j++) {\r\n      if (!squares[i][j] || current !== squares[i][j]) {\r\n        current = squares[i][j]\r\n        count = 1\r\n      } else {\r\n        count++\r\n      }\r\n\r\n      if (count === 5) return current\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\nconst searchColumn = (squares) => {\r\n  let current = null\r\n  let count = 1\r\n  for(let i = 0; i < squares.length; i++) {\r\n    for(let j = 0; j < squares[i].length; j++) {\r\n      if (!squares[j][i] || current !== squares[j][i]) {\r\n        current = squares[j][i]\r\n        count = 1\r\n      } else {\r\n        count++\r\n      }\r\n\r\n      if (count === 5) return current\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\nconst searchSlash = (squares) => {\r\n  let current = null\r\n  let count = 1\r\n  for(let i = 0; i < squares.length; i++) {\r\n    for(let j = 0; j < squares[i].length; j++) {\r\n      if (!squares[i][j]) {\r\n        current = squares[i][j]\r\n        count = 1\r\n      } else {\r\n        current = squares[i][j]\r\n        for(let k = 1; k < 5; k++) {\r\n          if (current !== squares[i + k][j - k]) {\r\n            count = 1\r\n            break\r\n          }\r\n          count++\r\n        }\r\n      }\r\n\r\n      if (count === 5) return current\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\nconst searchBackslash = (squares) => {\r\n  let current = null\r\n  let count = 1\r\n  for(let i = 0; i < squares.length; i++) {\r\n    for(let j = 0; j < squares[i].length; j++) {\r\n      if (!squares[i][j]) {\r\n        current = squares[i][j]\r\n        count = 1\r\n      } else {\r\n        current = squares[i][j]\r\n        for(let k = 1; k < 5; k++) {\r\n          if (current !== squares[i + k][j + k]) {\r\n            count = 1\r\n            break\r\n          }\r\n          count++\r\n        }\r\n      }\r\n\r\n      if (count === 5) return current\r\n    }\r\n  }\r\n  return null\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport Gomoku from './components/Gomoku'\r\n\r\nReactDOM.render(\r\n  <Gomoku />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}