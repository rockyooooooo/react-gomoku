{"version":3,"sources":["contexts.js","components/ActiveChess.js","components/Square.js","components/BoardRow.js","components/Board.js","components/TimeTravel.js","components/Gomoku.js","utils.js","index.js"],"names":["IsBlackNextContext","createContext","HandleClickContext","WinnerContext","StyledActiveChess","styled","div","square","isBlackNext","winner","props","ActiveChess","boardRowIndex","squareIndex","useContext","handleClick","onClick","StyledSquare","Square","BOARD_WIDTH","BOARD_HEIGHT","StyledBoardRow","BoardRow","row","map","index","Board","squares","StyledOl","ol","Button","button","TimeTravel","history","setRound","setWinner","setIsBlackNext","moves","move","step","description","jumpTo","countContinuousChess","currentX","currentY","directionX","directionY","targetColor","tempX","tempY","total","StyledGomoku","Main","Header","Title","h1","Subtitle","h2","Info","Status","initSquares","i","j","push","Gomoku","useState","setHistory","round","status","current","Provider","value","y","x","newHistory","JSON","parse","stringify","slice","concat","length","calculateWinner","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96bb6885.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const IsBlackNextContext = createContext()\r\nexport const HandleClickContext = createContext()\r\nexport const WinnerContext = createContext()","import styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport { useContext } from 'react'\r\nimport { HandleClickContext, IsBlackNextContext, WinnerContext } from '../contexts'\r\n\r\nconst StyledActiveChess = styled.div`\r\n  position: absolute;\r\n  z-index: 1;\r\n  padding: 1rem;\r\n  border-radius: 50%;\r\n\r\n  &:hover {\r\n    background: ${({ square, isBlackNext, winner }) => {\r\n      if(square || winner) return\r\n      return isBlackNext ? '#0008' : '#fff8'\r\n    }};\r\n  }\r\n\r\n  background: ${(props) => props.square};\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    & {\r\n      padding: 0.75rem;\r\n    }\r\n  }\r\n`\r\n\r\nexport default function ActiveChess({ square, boardRowIndex, squareIndex }) {\r\n  const isBlackNext = useContext(IsBlackNextContext)\r\n  const handleClick = useContext(HandleClickContext)\r\n  const winner = useContext(WinnerContext)\r\n  return (\r\n    <StyledActiveChess\r\n      square={square}\r\n      onClick={() => handleClick(boardRowIndex, squareIndex)}\r\n      isBlackNext={isBlackNext}\r\n      winner={winner}\r\n    />\r\n  )\r\n}\r\n\r\nActiveChess.propTypes = {\r\n  square: PropTypes.oneOf([\r\n    null,\r\n    'black',\r\n    'white'\r\n  ]),\r\n  boardRowIndex: PropTypes.number,\r\n  squareIndex: PropTypes.number\r\n}","import styled from 'styled-components'\r\nimport ActiveChess from './ActiveChess'\r\nimport { BOARD_WIDTH, BOARD_HEIGHT } from './Gomoku'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst StyledSquare = styled.div`\r\n  background: #d5b092;\r\n  position: relative;\r\n  display: inline-block;\r\n  border: 1px solid white;\r\n  padding: 1rem;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    & {\r\n      padding: 0.75rem;\r\n    }\r\n  }\r\n`\r\n\r\nexport default function Square({ square, boardRowIndex, squareIndex }) {\r\n  return (\r\n    <StyledSquare>\r\n      {\r\n        squareIndex >= BOARD_WIDTH - 1 ||\r\n        boardRowIndex >= BOARD_HEIGHT - 1 ?\r\n        '' :\r\n        <ActiveChess\r\n          square={square}\r\n          boardRowIndex={boardRowIndex}\r\n          squareIndex={squareIndex}\r\n        />\r\n      }\r\n    </StyledSquare>\r\n  )\r\n}\r\n\r\nSquare.propTypes = {\r\n  square: PropTypes.oneOf([\r\n    null,\r\n    'black',\r\n    'white'\r\n  ]),\r\n  boardRowIndex: PropTypes.number,\r\n  squareIndex: PropTypes.number\r\n}","import styled from 'styled-components'\r\nimport Square from './Square'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst StyledBoardRow = styled.div`\r\n  margin-bottom: -4px;  // 抵銷奇怪的 margin\r\n`\r\n\r\nexport default function BoardRow({ row, boardRowIndex }) {\r\n  return (\r\n    <StyledBoardRow>\r\n      {row.map((square, index) => \r\n        <Square\r\n          key={`squareKey${index}`}\r\n          square={square}\r\n          squareIndex={index}\r\n          boardRowIndex={boardRowIndex}\r\n        />\r\n      )}\r\n    </StyledBoardRow>\r\n  )\r\n}\r\n\r\nBoardRow.propTypes = {\r\n  row: PropTypes.arrayOf(\r\n    PropTypes.oneOf([\r\n      null,\r\n      'black',\r\n      'white'\r\n    ])\r\n  ),\r\n  boardRowIndex: PropTypes.number\r\n}","import BoardRow from './BoardRow'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Board({ squares }) {\r\n  return (\r\n    <div>\r\n      {squares.map((row, index) =>\r\n        <BoardRow\r\n          key={`rowKey${index}`}\r\n          row={row}\r\n          boardRowIndex={index}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nBoard.propTypes = {\r\n  squares: PropTypes.arrayOf(\r\n    PropTypes.arrayOf(\r\n      PropTypes.oneOf([\r\n        null,\r\n        'black',\r\n        'white'\r\n      ])\r\n    )\r\n  )\r\n}","import PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledOl = styled.ol`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  gap: 0 0.25rem;\r\n  height: 50vh;\r\n  overflow: auto;\r\n\r\n  @media screen and (max-width: 900px) {\r\n    & {\r\n      flex-direction: row;\r\n      max-height: 10rem;\r\n    }\r\n  }\r\n`\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  background: none;\r\n  padding: 0.25rem;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: #aaa;\r\n  }\r\n`\r\n\r\nexport default function TimeTravel({ history, setRound, setWinner, setIsBlackNext }) {\r\n  const jumpTo = (step) => {\r\n    setRound(step)\r\n    setIsBlackNext(!(step % 2))\r\n    setWinner('')\r\n  }\r\n\r\n  const moves = history.map((move, step) => {\r\n    const description = step ?\r\n      `Move ${step}` :\r\n      `Restart`\r\n    return (\r\n      <li key={step}>\r\n        <Button onClick={() => jumpTo(step)}>{description}</Button>\r\n      </li>\r\n    )\r\n  })\r\n\r\n  return <StyledOl>{moves}</StyledOl>\r\n}\r\n\r\nTimeTravel.propTypes = {\r\n  history: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      squares: PropTypes.arrayOf(\r\n        PropTypes.oneOf([\r\n          null,\r\n          'black',\r\n          'white'\r\n        ])\r\n      )\r\n    })\r\n  ),\r\n  setRound: PropTypes.func,\r\n  setWinner: PropTypes.func,\r\n  setIsBlackNext: PropTypes.func\r\n}","import { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Board from './Board'\r\nimport TimeTravel from './TimeTravel'\r\nimport { calculateWinner } from '../utils'\r\nimport { HandleClickContext, IsBlackNextContext, WinnerContext } from '../contexts'\r\n\r\nexport const BOARD_WIDTH = 19\r\nexport const BOARD_HEIGHT = 19\r\n\r\nconst StyledGomoku = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  gap: 2rem;\r\n\r\n  @media screen and (max-width: 900px) {\r\n    & {\r\n      flex-direction: column;\r\n      height: auto;\r\n    }\r\n  }\r\n`\r\n\r\nconst Main = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 2rem;\r\n  min-width: 494px;\r\n`\r\n\r\nconst Header = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nconst Title = styled.h1`\r\n  font-size: 3rem\r\n`\r\n\r\nconst Subtitle = styled.h2`\r\n  font-size: 2rem;\r\n`\r\n\r\nconst Info = styled.div`\r\n  margin-top: 9rem;\r\n\r\n  @media screen and (max-width: 900px) {\r\n    & {\r\n      margin-top: 1rem;\r\n    }\r\n  }\r\n`\r\n\r\nconst Status = styled.div`\r\n  width: 20rem;\r\n  font-size: 1.5rem;\r\n  text-transform: capitalize;\r\n  margin-bottom: 0.5rem;\r\n`\r\n\r\nconst initSquares = []\r\nfor(let i = 0; i < BOARD_HEIGHT; i++) {\r\n  const row = []\r\n  for(let j = 0; j < BOARD_WIDTH; j++) {\r\n    row.push(null)\r\n  }\r\n  initSquares.push(row)\r\n}\r\n\r\nexport default function Gomoku() {\r\n  const [history, setHistory] = useState(() => [{\r\n    squares: initSquares\r\n  }])\r\n  const [isBlackNext, setIsBlackNext] = useState(true)\r\n  const [winner, setWinner] = useState('')\r\n  const [round, setRound] = useState(0)\r\n\r\n  const status = winner ?\r\n  `Winner is: 🎉${winner}🎉` :\r\n  `Next is：${isBlackNext ? 'Black' : 'White'}`\r\n\r\n  const current = history[round].squares\r\n\r\n  const handleClick = (y, x) => {\r\n    if (current[y][x] || winner) return\r\n\r\n    const newHistory = JSON.parse(JSON.stringify(history.slice(0, round + 1)))\r\n    const squares = current.slice()\r\n    squares[y][x] = isBlackNext ? 'black' : 'white'\r\n    setHistory(newHistory.concat([{\r\n      squares\r\n    }]))\r\n    setIsBlackNext(!isBlackNext)\r\n    setRound(newHistory.length)\r\n    setWinner(calculateWinner(squares, y, x) ? squares[y][x] : '')\r\n  }\r\n\r\n  return (\r\n    <StyledGomoku>\r\n      <Main>\r\n        <Header>\r\n          <Title>五子棋</Title>\r\n          <Subtitle>Gomoku</Subtitle>\r\n        </Header>\r\n        <IsBlackNextContext.Provider value={isBlackNext}>\r\n          <HandleClickContext.Provider value={handleClick}>\r\n            <WinnerContext.Provider value={winner}>\r\n              <Board squares={current} />\r\n            </WinnerContext.Provider>\r\n          </HandleClickContext.Provider>\r\n        </IsBlackNextContext.Provider>\r\n      </Main>\r\n      <Info>\r\n        <Status>{status}</Status>\r\n        <TimeTravel history={history} setRound={setRound} setWinner={setWinner} setIsBlackNext={setIsBlackNext} />\r\n      </Info>\r\n    </StyledGomoku>\r\n  )\r\n}\r\n","export const calculateWinner = (squares, y, x) => {\r\n  return countContinuousChess(squares, x, y, 1, 0) + countContinuousChess(squares, x, y, -1, 0) >= 4 ||\r\n    countContinuousChess(squares, x, y, 0, 1) + countContinuousChess(squares, x, y, 0, -1) >=4 ||\r\n    countContinuousChess(squares, x, y, -1, -1) + countContinuousChess(squares, x, y, 1, 1) >=4 ||\r\n    countContinuousChess(squares, x, y, 1, -1) + countContinuousChess(squares, x, y, -1, 1) >=4\r\n}\r\n\r\nconst countContinuousChess = (squares, currentX, currentY, directionX, directionY) => {\r\n  const targetColor = squares[currentY][currentX]\r\n  let tempX = currentX + directionX\r\n  let tempY = currentY + directionY\r\n  let total = 0\r\n\r\n  while(tempX >= 0 && tempY >= 0 && squares[tempY][tempX] === targetColor) {\r\n    total++\r\n    tempX += directionX\r\n    tempY += directionY\r\n  }\r\n\r\n  return total\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport Gomoku from './components/Gomoku'\r\n\r\nReactDOM.render(\r\n  <Gomoku />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}